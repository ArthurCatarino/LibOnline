Regras de Verificação e Análise de Requisitos

O documento "Regras de Verificação e Análise de Requisitos" deverá ser criado e armazenado na pasta "Padrões Adotados". Este documento detalhará como os requisitos serão especificados e validados. Abaixo, estão três regras fundamentais que seu documento de requisitos deverá seguir, inspiradas nos princípios de especificação de requisitos de Engenharia de Software:
1. Clareza e Não Ambiguidade

Regra: Cada requisito deve ser claro, conciso e não ambíguo. Deve haver apenas uma interpretação possível para o que o sistema deve fazer ou como ele deve se comportar. Evite jargões desnecessários, frases complexas ou termos vagos (como "rápido", "fácil", "melhorado" sem métricas).

    Justificativa: Requisitos ambíguos levam a diferentes interpretações por parte da equipe de desenvolvimento e dos stakeholders, resultando em retrabalho, atrasos e sistemas que não atendem às expectativas. A clareza garante que todos na equipe tenham um entendimento comum do que precisa ser construído.
    Exemplo de Aplicação: Em vez de "O sistema deve ser rápido ao buscar livros", use "O sistema deve exibir os resultados da busca de livros em no máximo 2 segundos para até 10.000 registros".

2. Testabilidade (Verificabilidade)

Regra: Cada requisito deve ser testável ou verificável. Isso significa que deve ser possível, através de um procedimento ou teste, determinar se o sistema satisfaz ou não aquele requisito.

    Justificativa: Requisitos não testáveis não podem ser validados, tornando impossível saber se o projeto foi concluído com sucesso e se o produto final atende às especificações. A testabilidade facilita a criação de planos de teste e garante a qualidade do software.
    Exemplo de Aplicação: Em vez de "O sistema deve ser seguro", use "O sistema deve impedir acessos não autorizados por meio de autenticação de usuário com senha criptografada" (um requisito funcional) e "O sistema deve resistir a [X] tentativas de login falhas por minuto antes de bloquear o usuário por [Y] minutos" (um requisito não funcional testável).

3. Completude e Consistência

Regra: O conjunto de requisitos deve ser completo e consistente.

    Completude: O documento de requisitos deve conter todas as funcionalidades e restrições necessárias para o sistema atender aos seus objetivos. Não deve faltar nenhuma informação crucial.

    Consistência: Os requisitos não devem se contradizer. Não pode haver dois requisitos que exijam comportamentos incompatíveis do sistema.

    Justificativa: Requisitos incompletos resultam em funcionalidades ausentes no produto final, enquanto inconsistências levam a conflitos de design e implementação, gerando erros e complexidade desnecessária.

    Exemplo de Aplicação: Se um requisito diz "O sistema deve permitir apenas um empréstimo por leitor", e outro diz "Leitores VIP podem ter até 3 empréstimos simultâneos", há uma inconsistência que precisa ser resolvida. A completude seria garantir que todas as operações de CRUD, os perfis de usuário e suas permissões, bem como as regras de negócio dos empréstimos e reservas, estejam descritas.

Ao seguir estas diretrizes, você garantirá que seu documento de requisitos seja um artefato de alta qualidade, que servirá como base sólida para as próximas fases do seu projeto de Engenharia de Software.
